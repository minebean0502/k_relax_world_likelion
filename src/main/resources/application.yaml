spring:
  security:
    oauth2:
      client:
        # OAuth2 서비스 제공자를 사용하는 방법
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

        registration:
          kakao:
            # REST API키
            client-id: ddaf1bf71d3c3ca7567e723142cc40e3
            client-secret: 5EDD9p1A8D84AEyOSKnklKnwtvFmSUqH
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            client-name: Kakao
            scope:
              - profile_nickname

  datasource:
    url: jdbc:sqlite:db.sqlite
    driver-class-name: org.sqlite.JDBC
  jpa:
    hibernate:
      ddl-auto: create
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    show-sql: true
#  sql:
#    init:
#      mode: always

# 커스텀 설정(Spring 내부 설정 아님)
jwt:
  secret: aaaabbbsdifqbvaesoioegwaaaabbbsdifqbvaesoioegwaaaabbbsdifqbvaes
  #        show_sql: true
  #  h2:
  #    console:
  #      enabled: true
  #      path: /h2-console

  thymeleaf:
    prefix: classpath:templates/
    check-template-location: true
    suffix: .html
    mode: HTML5
    cache: false
    template-resolver-order: 0

#logging:
#  level:
#    root: INFO
#    org.springframework.web: DEBUG
#    com.example.myapp: DEBUG
#  file:
#    name: app.log
